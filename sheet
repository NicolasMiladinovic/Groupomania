<script>
import axios from "axios";

export default {
  name: "Publish",
  data() {
    return {
      file: [],
    };
  },
  methods: {
    addPost() {
      const title = document.getElementById("title").value;
      const file = 
      axios
        .post(
          `http://localhost:3000/post/`,
          {
            title,
            file,
          },
          {
            headers: {
              "Content-type": "multipart/form-data",
              Authorization: `Bearer ${this.$token}`,
            },
          }
        )
        .then((result) => {
          if (result.status === 201) {
            document.location.href = "./";
          }
        });
    },
  },
};
</script>

<template>
  <div>
    <form @submit.prevent="addPost()">
      <input id="title" type="text" />
      <input id="file" type="file" />
      <button>Publish</button>
    </form>
  </div>
</template>

<style>
</style>







exports.deleteonepost = (req, res, next) => {
/*  const token = req.headers.authorization.split(' ')[1];
    const decodedToken = jwt.verify(token, 'groupomania_secret_token'); */
    const post_id = req.params.id;
    let sql = `DELETE FROM Posts WHERE id=${post_id}`;
    db.query(sql, function (err, result) {
        if (err) {
            console.log(err);
            return res.status(400).json("error");
        } else {
            console.log("Post has been deleted");
            return res.status(200).json(result);
        };
    });
};



exports.deleteonepost = (req, res, next) => {
    const token = req.headers.authorization.split(' ')[1];
    const decodedToken = jwt.verify(token, 'groupomania_secret_token');
    const post_id = req.params.id;
    //////const userId = decodedToken.userId;
    db.query(`SELECT * FROM Posts WHERE Posts.id = ?`,
        [post_id],
        function (err, result) {
            console.log(result);
            if (err) {
                console.log(err);
                return res.status(400).json('error')
            }
            if (decodedToken.userId == result[0].userId) {
                const filename = result[0].imgURL.split('/images')[1];
                fs.unlink(`images/${filename}`, () => {
                    db.query(`DELETE FROM Posts WHERE Posts.id = ?`,
                        [post_id],
                        function (err, result) {
                            if (err) {
                                return res.status(400).json({ err });
                            }
                            return res.status(200).json(result)
                        })
                })
            }
        }
    )
}



/////////APP VUETIFY

<template>
  <v-app>
    <v-app-bar
      app
      color="primary"
      dark
    >
      <div class="d-flex align-center">
        <v-img
          alt="Vuetify Logo"
          class="shrink mr-2"
          contain
          src="https://cdn.vuetifyjs.com/images/logos/vuetify-logo-dark.png"
          transition="scale-transition"
          width="40"
        />

        <v-img
          alt="Vuetify Name"
          class="shrink mt-1 hidden-sm-and-down"
          contain
          min-width="100"
          src="https://cdn.vuetifyjs.com/images/logos/vuetify-name-dark.png"
          width="100"
        />
      </div>

      <v-spacer></v-spacer>

      <v-btn
        href="https://github.com/vuetifyjs/vuetify/releases/latest"
        target="_blank"
        text
      >
        <span class="mr-2">Latest Release</span>
        <v-icon>mdi-open-in-new</v-icon>
      </v-btn>
    </v-app-bar>

    <v-main>
      <HelloWorld/>
    </v-main>
  </v-app>
</template>

<script>
import HelloWorld from './components/HelloWorld';

export default {
  name: 'App',

  components: {
    HelloWorld,
  },

  data: () => ({
    //
  }),
};
</script>


////////// APP . VUE

<template>
  <div id="app">
    <router-view />
  </div>
</template>

<script>

</script>

<style>

</style>



/////// NAVBAR

<v-toolbar>
    <router-link to="/"
      ><img
        id="logo"
        src="/Logo_Groupomania/icon-white.png"
      />Groupomania
    </router-link>
    <router-link v-if="visible" to="/signup" class="link" id="signup"
      >Sign Up</router-link
    >
    <router-link v-if="visible" to="/login" class="link" id="login"
      >Log In</router-link
    >
    <div v-if="!visible" @click="disconnection()" class="link linklog">
      Log Out
    </div>
    <router-link v-if="!visible" to="/user" class="link linklog"
      >Profile</router-link
    >
    <router-link v-if="!visible" to="/compose" class="link linklog"
      >Add Post</router-link
    >
  </v-toolbar>


//////// Posts
  <div id="post_container">
        <p id="date">{{ dateLocale(Posts.date) }}</p>
        <p id="pseudo">
          Posted by
          <router-link
            :to="{ name: 'OtherUser', params: { id: Posts.user_id } }"
            >{{ Posts.pseudo }}</router-link
          >
        </p>
        <h2>{{ Posts.title }}</h2>
        <img id="img" :src="Posts.imgURL" :alt="Posts.title" />
      </div>


      ////////// Sign Up
      <div id="sign">
    <form id="sign-form" action="#" @submit.prevent="signup">
      <div class="input-form">
        <label for="name">Name</label>
        <input id="name" type="text" minlength="2" required />
      </div>
      <div class="input-form">
        <label for="firstname">Firstname</label>
        <input id="firstname" type="text" minlength="2" required />
      </div>
      <div class="input-form">
        <label for="pseudo">Pseudo</label>
        <input id="pseudo" type="text" minlength="5" required />
      </div>
      <div class="input-form">
        <label for="email">Email</label>
        <input id="email" type="email" required />
      </div>
      <div class="input-form">
        <label for="password">Password</label>
        <input id="password" type="password" minlength="6" required />
      </div>
      <button id="sign-btn" type="submit">Sign Up</button>
    </form>
    <div class="error-message">{{ message }}</div>
  </div>


  //////// SIGN In
  <form id="sign-form" action="#" @submit.prevent="signup">
      <div class="input-form">
        <label for="name">Name</label>
        <input id="name" type="text" minlength="2" required />
      </div>
      <div class="input-form">
        <label for="firstname">Firstname</label>
        <input id="firstname" type="text" minlength="2" required />
      </div>
      <div class="input-form">
        <label for="pseudo">Pseudo</label>
        <input id="pseudo" type="text" minlength="5" required />
      </div>
      <div class="input-form">
        <label for="email">Email</label>
        <input id="email" type="email" required />
      </div>
      <div class="input-form">
        <label for="password">Password</label>
        <input id="password" type="password" minlength="6" required />
      </div>
      <button id="sign-btn" type="submit">Sign Up</button>
    </form>
    <div class="error-message">{{ message }}</div>


    ///// COMMS


    <div>
    <div>{{ comms.length }} Reply<span v-if="comms.length > 1">s</span></div>
    <form @submit.prevent="addComm()" id="replys-form">
      <input id="content" />
      <button type="submit">Comment</button>
    </form>
    <div id="comms" v-for="Comms in comms" :key="Comms.id">
      <div
        v-if="Comms.user_id == user_connected_id"
        @click="deleteComm(Comms.id)"
        id="delete-comm"
      >
        X
      </div>
      <div id="pseudo">@{{ Comms.pseudo }}</div>
      <div id="comm-content">{{ Comms.content }}</div>
    </div>
  </div>